# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, ugkg
# This file is distributed under the same license as the Deviation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Deviation 5.1-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-30 19:47+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language-Team: Russian (https://www.transifex.com/deviationtx/teams/73329/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../source/ch_advanced.rst:4
msgid "Advanced Topics"
msgstr ""

#: ../../source/ch_advanced.rst:9
msgid "Setting up a Buddy-Box"
msgstr ""

#: ../../source/ch_advanced.rst:10
msgid ""
"Deviation can be used to act as either the instructor (master) or student "
"(slave) transmitter in a buddy-box configuration.  In this mode, the "
"instructor and student connect their respective transmitters together with a"
" trainer cord via the DSC port.  The instructor’s transmitter will actually "
"communicate with the model, but the instructor can use a switch to allow the"
" student to control the model.  When the switch is enabled, the student’s "
"transmitter sends input (stick) information through the trainer cord to the "
"instructor’s transmitter and these inputs replace the instructor’s inputs."
msgstr ""

#: ../../source/ch_advanced.rst:12
msgid ""
"Deviation can be configured to work with virtually any transmitter that "
"supports either master or slave mode.  Matching Deviation to a different "
"manufacturer requires knowing the PPM parameters for the paired transmitter,"
" and properly configuring the ‘Center PW’ and ‘Delta PW’ properly as well as"
" knowing how many channels are transmitted and what the channel ordering is."
"  The best place to find this information is to ask on the "
"www.deviationtx.com forums."
msgstr ""

#: ../../source/ch_advanced.rst:15
msgid "Master Mode"
msgstr ""

#: ../../source/ch_advanced.rst:16
msgid ""
"Master mode is configured by selecting either ‘Channel’ or ‘Stick’ from the "
"‘PPM In’ spin-box in section :ref:`model-setup`. Pressing ‘ENT’ on either "
"‘Stick’ or ‘Channel’ will show the ‘Trainer Cfg’ pages. The 2 modes behave "
"slightly differently:"
msgstr ""

#: ../../source/ch_advanced.rst:23
msgid ""
"**Stick**: In stick mode, each input channel is mapped to a stick on the "
"master transmitter.  In this mode, the student moving the stick will behave "
"exactly as if the instructor had moved the stick. Generally when using this "
"mode, the student’s transmitter will directly pass the stick position (no "
"mixing) and the instructor’s transmitter will do all necessary mixing."
msgstr ""

#: ../../source/ch_advanced.rst:30
msgid ""
"**Channel**: In channel mode, each input channel is mapped to an output "
"channel on the instructor’s transmitter.  In this mode, the student’s "
"transmitter should do all necessary mixing to control the model.  Care must "
"be taken to ensure that the instructor and student transmitters are "
"configured identically, otherwise, the model may not react well when "
"switching between instructor and student control."
msgstr ""

#: ../../source/ch_advanced.rst:32
msgid "Options configurable on both Trainer Cfg pages:"
msgstr ""

#: ../../source/ch_advanced.rst:34
msgid ""
"**Center PW**: Defines the time (in µsec) of the pulse that the student’s "
"transmitter transmits to represent centered servo position.  If this number "
"doesn’t match the students transmitter, the servos will not be centered"
msgstr ""

#: ../../source/ch_advanced.rst:36
msgid ""
"**Delta PW**: Defines the width of the pulse (measured from center) sent by "
"the student’s transmitter to define max servo throw.  If this value is "
"incorrect, the servos will not achieve full range (or will travel too much)"
msgstr ""

#: ../../source/ch_advanced.rst:38
msgid ""
"**Trainer Sw**: Defines the switch that enables the student to take control "
"of the model"
msgstr ""

#: ../../source/ch_advanced.rst:40
msgid ""
"**PPM1...PPM8**: Defines the mapping (either channel or input) from the "
"student’s transmitter to the instructor’s"
msgstr ""

#: ../../source/ch_advanced.rst:43
msgid "Slave Mode"
msgstr ""

#: ../../source/ch_advanced.rst:44
msgid ""
"Slave mode is configured by choosing ‘PPM’ as the protocol in section :ref"
":`model-setup`.  Pressing ‘ENT’ on the Protocol spin-box will enable setting"
" the output options.  See section :ref:`protocol-ppm` for configuration.  "
"Note that Deviation will send the channel output data through the PPM.  To "
"use a Deviation slave transmitter with a Deviation Master configured for "
"‘Stick’ mode (see above), there should be no mixing done in the slave "
"transmitter."
msgstr ""

#: ../../source/ch_advanced.rst:49
msgid "Setting Up FPV or Other External Inputs"
msgstr ""

#: ../../source/ch_advanced.rst:56
msgid ""
"Deviation has the ability to use PPM input signals from an external source "
"(such as an FPV setup).  To configure this mode, set the PPM In mode to "
"‘Extend’ in section :ref:`model-setup`."
msgstr ""

#: ../../source/ch_advanced.rst:58
msgid ""
"Once enabled, press ‘ENT’ on the PPM In spin-box to configure the additional"
" inputs."
msgstr ""

#: ../../source/ch_advanced.rst:60
msgid "Configuration options:"
msgstr ""

#: ../../source/ch_advanced.rst:62
msgid "**Center PW**: Defines the pulse-width for a centered input (in µsec)."
msgstr ""

#: ../../source/ch_advanced.rst:63
msgid ""
"**Delta PW**: Defines the difference in pulse-width (from the center value) "
"to reach min/max servo throw"
msgstr ""

#: ../../source/ch_advanced.rst:64
msgid ""
"**Num Channels**: Defines the number of channels to input (generally no more"
" than 8 can be supported)"
msgstr ""

#: ../../source/ch_advanced.rst:69
msgid "Using a Trim as a Virtual Switch"
msgstr ""

#: ../../source/ch_advanced.rst:70
msgid ""
"Deviation has the capability to create virtual switches to supplement the "
"mechanical switches of the transmitter.  This capability is only available "
"when using the Advanced GUI.  There are 3 types of switches available:"
msgstr ""

#: ../../source/ch_advanced.rst:72
msgid ""
"**Momentary**: The switch will be active only as long as the trim button is "
"held"
msgstr ""

#: ../../source/ch_advanced.rst:73
msgid ""
"**Toggle**: The switch will toggle from on-to-off or off-to-on each time the"
" trim button is pressed"
msgstr ""

#: ../../source/ch_advanced.rst:74
msgid ""
"**On/Off**: The Trim+ button will turn the switch on, and the 'Trim-' button"
" will turn it off-to-on"
msgstr ""

#: ../../source/ch_advanced.rst:76
msgid ""
"To setup a virtual switch, start by selecting the trim from the 'Trim' page,"
" and entering the trim-setup page.  See :ref:`trims-and-virtual-inputs`"
msgstr ""

#: ../../source/ch_advanced.rst:83
msgid ""
"Next set the 'Trim Step' field to 'Momentary', 'Toggle' or 'On/Off'.  This "
"is done by pressing the left-arrow on the 'Trim Step' spin-box until the "
"value is less-than 0.1 Second select the 'Input' to be the virtual channel "
"to convert to a switch (we'll use 'Virt1')"
msgstr ""

#: ../../source/ch_advanced.rst:93
msgid ""
"Now go to the 'Mixer' page, and enter the configuration for the specified "
"Virtual Channel (Virt1 in our example)"
msgstr ""

#: ../../source/ch_advanced.rst:95
msgid ""
"Set the mixer-type to 'Complex', set the 'src' to the current virtual "
"channel ('Virt1'), set the curve to '1-to-1' (Do NOT use 'Fixed'), set the "
"scale to '0', and finally enable the 'Trim' button."
msgstr ""

#: ../../source/ch_advanced.rst:97
msgid ""
"You can now use the virtual channel ('Virt1') like any other switch input.  "
"When the virtual switch is active, the virtual channel will have a value of "
"100, otherwise it will have a value of -100."
msgstr ""

#: ../../source/ch_advanced.rst:99 ../../source/ch_advanced.rst:147
msgid "\\"
msgstr ""

#: ../../source/ch_advanced.rst:103
msgid ""
"Note: If you use the virtual channel as a 'Src' (as opposed to a 'Switch') "
"make sure that 'trim' is disabled for that mixer, otherwise the trim will be"
" applied twice."
msgstr ""

#: ../../source/ch_advanced.rst:108
msgid "Swash Mixing"
msgstr ""

#: ../../source/ch_advanced.rst:109
msgid ""
"A swash-plate is used to control flight on an RC helicopter.  The swash-"
"plate controls the plane of rotation of the main-rotor as well as the blade "
"pitch.  A swash plate is normally connected to 3 servos known as Elevator, "
"Aileron, and Collective, but due to its design, there is not a 1-to-1 "
"correspondence between stick-movement and the servo movement.  Instead some "
"mixing is necessary between the throttle, elevator and aileron sticks and "
"the swash-plate servos.  This mixing is known as cyclic Collective Pitch "
"Mixing (CCMP)."
msgstr ""

#: ../../source/ch_advanced.rst:111
msgid ""
"Traditionally, RC helicopters have used a flybar above or below the main "
"rotor attached to a series of linkages to maintain stability.  In these "
"setups, the transmitter will normally do all of the mixing, and directly "
"drive each of the 3 swash-plate servos.  This configuration is known as "
"manual-CCPM (mCCPM).  Alternatively, an electronic mixer can be included on "
"the helicopter either as part of the receiver, or between the receiver and "
"servos, that can implement the proper mixing.  This configuration is known "
"as electronic CCPM (eCCPM) and in this case, the transmitter directly "
"supplies aileron, elevator, and collective inputs, and the electronic mixer "
"will convert the signals into appropriate swash-plate servo motion."
msgstr ""

#: ../../source/ch_advanced.rst:113
msgid ""
"Recently, flybarless (FBL) helicopters have become more common, especially "
"in the micro size range.  These helicopters use an eCCPM system along with "
"an electronic gyroscope to continuously adjust the swash-plate to maintain "
"stability without the need for a physical flybar.  This setup tends to be "
"less expensive to manufacture, and also provides better stability and more "
"precise control."
msgstr ""

#: ../../source/ch_advanced.rst:115
msgid ""
"Deviation provides control for several swash-plate layouts, these include: "
"120°, 120° Alternate, 140°,  90°, and None. Each of these options are "
"illustrated below:"
msgstr ""

#: ../../source/ch_advanced.rst:122
msgid ""
"**120 (3 Servo)**: Servos are placed around the swash-plate at 120° "
"intervals. With Aileron input, the aileron and pitch servos tilt the swash-"
"plate left and right; with Elevator input, the three servos tilt the swash-"
"plate fore and aft; with Pitch input, all three servos raise the swash-plate"
" up and down. Servos working in unison dramatically increases the torque "
"available as well as the precision and centering."
msgstr ""

#: ../../source/ch_advanced.rst:129
msgid ""
"**120X (3 Servo)**: Same as the above layout except servos are shifted 150°."
" With Aileron input, the three servos tilt the swash-plate left and right; "
"with Elevator input, the elevator and pitch servos tilt the swash-plate fore"
" and aft; with Pitch input, all three servos raise the swash-plate up and "
"down."
msgstr ""

#: ../../source/ch_advanced.rst:136
msgid ""
"**140 (3 Servo)**: Fundamentally, the servo operations of 140° swash-plates "
"are almost the same as 120° swash-plates. However, the servo arrangement for"
" elevator operation differs. 140° swash-plate CCPM offers smoother operation"
" of the combined servos and an equal cyclic rate all around. On a 120° "
"setup, the left/right cyclic is slightly faster than the fore/aft cyclic."
msgstr ""

#: ../../source/ch_advanced.rst:143
msgid ""
"**90 (3 Servo)**: With Aileron input, the aileron and pitch servos tilt the "
"swash-plate left and right; with elevator input, the servos tilt the swash-"
"plate fore and aft; with Pitch input, all three servos raise the swash-plate"
" up and down. Most commonly used for electronic helicopters."
msgstr ""

#: ../../source/ch_advanced.rst:145
msgid ""
"**None**: This is a special case where all mixing is done on-board the "
"helicopter using a gyroscopic flight control system. Please refer to the "
"specific manufacturers instructions to see how to configure mixer outputs."
msgstr ""

#: ../../source/ch_advanced.rst:151
msgid ""
"Note: Some helicopters are 120 or 140, except rotated 180 degrees. In these "
"cases you will still use the designated swash-plate type but may need to "
"reverse specific channels."
msgstr ""

#: ../../source/ch_advanced.rst:156
msgid "Modifying sounds"
msgstr ""

#: ../../source/ch_advanced.rst:158
msgid ""
"You can edit the sounds your Devo makes, though you have to do it by "
"mounting the transmitter as a USB drive and editing the 'sound.ini' file in "
"the 'media' folder."
msgstr ""

#: ../../source/ch_advanced.rst:162
msgid "The sections, and what causes them to play, are:"
msgstr ""

#: ../../source/ch_advanced.rst:164
msgid "**startup**: Powered on."
msgstr ""

#: ../../source/ch_advanced.rst:165
msgid "**shutdown**: Powering off."
msgstr ""

#: ../../source/ch_advanced.rst:166
msgid "**volume**: Configuring transmitter volume."
msgstr ""

#: ../../source/ch_advanced.rst:167
msgid "**timer_warning**: Timer is about to expire."
msgstr ""

#: ../../source/ch_advanced.rst:168
msgid "**alarm#**: Timer # (1 to 4) has expired."
msgstr ""

#: ../../source/ch_advanced.rst:169
msgid "**batt_alarm**: Battery low warning."
msgstr ""

#: ../../source/ch_advanced.rst:170
msgid "**done_binding**: Binding finished."
msgstr ""

#: ../../source/ch_advanced.rst:171
msgid "**key_pressing**: On a key press"
msgstr ""

#: ../../source/ch_advanced.rst:172
msgid "**saving**: When saving a model file."
msgstr ""

#: ../../source/ch_advanced.rst:173
msgid ""
"**max_len**: When you've exceeded the length of a string in the keyboard."
msgstr ""

#: ../../source/ch_advanced.rst:174
msgid "**telem_alarm#**: Telemetry alarm # (1 to 6) has triggered."
msgstr ""

#: ../../source/ch_advanced.rst:176
msgid ""
"In each section, you can adjust set 'volume' from 0 (off) to 100 (max). The "
"rest of the entries are note names, and the value is the number of "
"milliseconds to play that note. There is a limit of 100 notes for each "
"sound."
msgstr ""

#: ../../source/ch_advanced.rst:181
msgid ""
"The note names are 'xx', which is a rest (no sound played). You can then "
"pick a note ('a'-'g'), possibly sharped by adding a 'x' if it's 'a', 'c', "
"'d', 'f' or 'g'. Finally, you can choose an octave with a single digit, "
"ranging from '0' to '4'. Those take you from 'c0' (middle C) up to 'b4'. In "
"addition, 'a', 'ax' and 'b' will play the three notes below middle C."
msgstr ""
